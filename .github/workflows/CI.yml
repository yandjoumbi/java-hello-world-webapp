name: CI with maven 

on:
  push:
    branches: [ yannick ]
  pull_request:
    branches: [ yannick ]

env:
  SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}

jobs:
  build_and_test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    # - name: clean the application 
    #   run: mvn -s settings.xml -DskipTests install

    - name: Build project with Maven
      run: mvn -B package --file pom.xml
    
    - name: Run SonnarQube analysis
      env: 
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify sonar:sonar -Dsonar.projectKey=MyProject -Dsonar.host.url=http://13.56.224.174 -Dsonar.login=$SONAR_TOKEN
    
    - name: Setup AWS ECR Details  
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: AKIAYWJUS24ZF544OJNX
        aws-secret-access-key: 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
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-pf-aws-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Build and push the tagged docker image to Amazon ECR
      # env:
        # ECR_REGISTRY: public.ecr.aws/v6n8a7u8
        # ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
        # IMAGE_TAG: latest
      run: |
            aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/v6n8a7u8
            docker build -t my-project ./Docker-files/
            docker tag my-project:latest public.ecr.aws/v6n8a7u8/my-project:latest 
            docker push public.ecr.aws/v6n8a7u8/my-project:latest
      
    

        

    

